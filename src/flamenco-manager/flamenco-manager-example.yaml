database_url: mongodb://localhost/flamanager
listen: '[::0]:8083'
own_url: http://192.168.3.108:8083/
flamenco: https://cloud.blender.org/
manager_id: 58514ce59837734ea16e9060
manager_secret: theworldistheworld

# Optional TLS keys for the built-in HTTP server. When given,
# own_url will be rewritten to https://...
tlskey: tls/privkey.pem
tlscert: tls/cert.pem

# How often the Manager should ask the Server for new tasks, regardless of how often workers ask.
download_task_sleep_seconds: 60

# The number of seconds between rechecks when there are no more tasks for workers.
# If set to 0, will not throttle at all.
# If set to -1, will never check when a worker asks for a task (so only every
# download_task_sleep_seconds seconds).
download_task_recheck_throttle_seconds: 10

# These settings determine the task update batching behaviour. All task updates are batched,
# and the batch is sent whenever the max seconds since the last push have passed, or when
# the batch is at its maximum size, whichever happens first.
task_update_push_max_interval_seconds: 5
task_update_push_max_count: 20

# An empty list of task updates is pushed every `cancel_task_fetch_max_interval_seconds`,
# unless an actual task update push already happened within that time. This controls how
# fast the Manager can respond to task cancel requests.
cancel_task_fetch_max_interval_seconds: 10

# When a task has status "active", but it hasn't been touched by a worker in
# this many seconds, it will go to state "failed". Being "touched" means that
# a worker called /may-i-run/{task-id} for this task.
active_task_timeout_interval_seconds: 60

# Tasks that have been in the local cache (i.e. the 'flamenco_tasks' collection)
# without being updated for this many days are periodically deleted from the
# manager's database. If the Server updates them, they will be re-downloaded.
#
# Days are assumed to be 24 hours long. This is not exactly accurate, but should
# be accurate enough for this type of cleanup.
task_cleanup_max_age_days: 14

# If set, Flamenco Manager will recursively monitor this path, and show the latest
# image placed there on the status dashboard.
# watch_for_latest_image: /path/to/render/outputs


variables:
    blender:
        windows: c:/temp/blender.exe --enable-new-depsgraph --factory-startup
        linux: /opt/myblenderbuild/blender --enable-new-depsgraph --factory-startup
        darwin: /opt/myblenderbuild/blender --enable-new-depsgraph --factory-startup
